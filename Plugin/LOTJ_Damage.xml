<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, June 02, 2013, 11:35 PM -->
<!-- MuClient version 4.84 -->

<!-- Plugin "Damage" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Damage"
   author="CCubed"
   id="2cdb5c0a86ef9529aa91aa2c"
   language="Lua"
   purpose="Test weapon damage ranges"
   date_written="2013-06-02 23:33:53"
   requires="4.84"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Use on LOTJ to calculate weapon damage for engineers. Just give to a combatant that can see damage numbers and whee

Commands:
reset - completely reset all variables. This should be done after every test.

damstat - see high, low, avg, total, energy before, energy after and the series of damage hits

damhelp - this
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="You do * points of damage."
   script="addDamage"
   send_to="12"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="&lt;wielded&gt;           * (*) (Power: *)"
   script="Energy"
   send_to="12"
   sequence="100"
  >
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   script="DamStat"
   match="damstat"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="Reset"
   match="damreset"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[
-- lotj damage plugin

local Tracker = {}
local energy = 0
local energymax = 0
local energystate = 0

function addDamage (thename, theoutput, wildcards, line)

	if next(Tracker) == nil then
		--empty table
		Tracker[1] = wildcards[1]
	else
		--not empty
		Tracker[table.getn(Tracker)+1]=wildcards[1]
	end

end

function DamStat (thename, theoutput, wildcards)

	if energystate ~= 2 then
		Send("eq")
		os.execute("sleep 2")
		Execute("damstat")
		
	else 
	
		local avg = 0
		local total = 0
		local low = Tracker[1]
		local high = Tracker[1]
	
		for i = 1, table.getn(Tracker), 1 do
		
			total = total + tonumber(Tracker[i])
			if Tracker[i] > high then
				high = Tracker[i]
			end
			if Tracker[i] < low then
				low = Tracker[i]
			end
		
		end
		
		avg = total / table.getn(Tracker)
	
		ColourNote("Orange","","Calculated Battle Stats.")
		ColourNote("Orange","","------------------------")
		ColourNote("Orange","","High: "..high)
		ColourNote("Orange","","Low: "..low)
		ColourNote("Orange","","Total Damage: "..total)
		ColourNote("Orange","","Average Damage: "..avg)
		ColourNote("Orange","","Energy Max: "..energymax)
		ColourNote("Orange","","Energy Now: "..energy)
		ColourNote("Orange","","Difference: "..energymax - energy)
		ColourNote("Orange","","Series:")
		for i = 1, table.getn(Tracker), 1 do
		
			ColourNote("Orange","",i..") "..Tracker[i])
		
		end
		
	end

end

function Energy (thename, theoutput, wildcards, line)

	if energystate == 0 then
		--getting base
		energymax = wildcards[3]
		energystate = 1
	elseif energystate == 1 then
		--getting end
		energy	= wildcards[3]
		energystate = 2
	end

end

function Reset (thename, theoutput, wildcards)

	energystate = 0
	energy = 0
	energymax = 0
	Tracker = {}

end
]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="damhelp"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
